apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-{{ include "service.template" . }}
  labels:
    {{ include "service.defaultlabels" . }}
spec:
  replicas: {{ .Values.backend.replicas }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ .Release.Name }}-{{ include "service.template" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ .Release.Name }}-{{ include "service.template" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        type: {{ .Release.Name }}-{{ include "service.template" . }}
      annotations:
        {{- if .Values.backend.rollOnUpgrade }}
        rollme: {{ randAlphaNum 5 | quote }}
        {{- end }}
    spec:
      containers:
        - name: {{ .Release.Name }}-{{ include "service.template" . }}
          image: "{{ .Values.backend.image.repository }}:{{ default .Chart.AppVersion .Values.backend.image.tag }}"
        {{- if .Values.backend.image.pullPolicy }}
          imagePullPolicy: {{ .Values.backend.image.pullPolicy }}
        {{- end }}
          resources:
{{ toYaml .Values.backend.resources | indent 12 }}
          ports:
            - name: http
              containerPort: 3001
              protocol: TCP
          # give the app 30*10s=5m to startup
      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}-{{ .Values.backend.service.name }}
  labels:
    {{ include "service.defaultlabels" . }}
    type: {{ .Release.Name }}
spec:
  selector:
    type: {{ .Release.Name }}-{{ include "service.template" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
  ports:
    - name: http
      protocol: TCP
      port: 3001
      targetPort: 3001
